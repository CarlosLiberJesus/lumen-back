# husky/pre-commit
#!/bin/sh
. "$(dirname "$0")/_/husky.sh"

# Get the list of staged PHP files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.php$')

# Run duster and rector only on staged PHP files
if [ -n "$STAGED_FILES" ]; then
  #echo "$STAGED_FILES" | xargs ./backend/vendor/bin/phpstan analyse --level=max
  #if [ $? -ne 0 ]; then exit 1; fi
  
  #echo "$STAGED_FILES" | xargs ./backend/vendor/bin/phpcbf --standard=PSR12
  #PHPCBF_EXIT_CODE=$?

  # If phpcbf fixed all issues (exit code 0), continue with the commit
  #if [ $PHPCBF_EXIT_CODE -eq 0 ]; then
  #    echo "All issues fixed by phpcbf. Proceeding with commit."
  #fi

  # If phpcbf found issues that it couldn't fix (exit code 1), stop the commit
  #if [ $PHPCBF_EXIT_CODE -eq 1 ]; then
  #    echo "phpcbf found issues that it couldn't fix. Stopping commit."
  #    exit 1
  #fi

  # If phpcbf encountered an error (exit code 2 or higher), stop the commit
  #if [ $PHPCBF_EXIT_CODE -ge 2 ]; then
  #    echo "phpcbf encountered an error. Stopping commit."
  #    exit 1
  #fi

  echo "$STAGED_FILES" | xargs ./backend/vendor/bin/rector process
  if [ $? -ne 0 ]; then exit 1; fi

  echo "$STAGED_FILES" | xargs ./backend/vendor/bin/duster fix
  if [ $? -ne 0 ]; then exit 1; fi

  echo "$STAGED_FILES" | xargs ./backend/vendor/bin/duster lint
  if [ $? -ne 0 ]; then exit 1; fi

  
fi

# Run lint-staged for js|json files
npx lint-staged